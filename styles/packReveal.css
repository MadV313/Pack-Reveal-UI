// scripts/renderPackReveal.js

const packPath = 'data/mockPackReveal.json';

const rarityClasses = {
  Common: 'border-common',
  Uncommon: 'border-uncommon',
  Rare: 'border-rare',
  Legendary: 'border-legendary'
};

function renderPackReveal(data) {
  const container = document.getElementById('cardContainer');
  const toast = document.getElementById('toast');
  const title = document.getElementById('reveal-title');
  const countdown = document.getElementById('countdown');
  const closeBtn = document.getElementById('closeBtn');

  title.textContent = data.title || 'New Card Pack Unlocked!';
  let newUnlockShown = false;

  const cards = data.cards;

  cards.forEach((card, index) => {
    const cardDiv = document.createElement('div');
    cardDiv.className = 'card-slot';
    cardDiv.style.animationDelay = `${index * 1}s`;

    const cardBack = document.createElement('img');
    cardBack.src = 'images/cards/000_WinterlandDeathDeck_Back.png';
    cardBack.className = 'card-img card-back';
    cardDiv.appendChild(cardBack);
    container.appendChild(cardDiv);

    setTimeout(() => {
      cardBack.classList.add('flip-out');

      const faceImg = document.createElement('img');
      faceImg.src = `images/cards/${card.filename}`;
      faceImg.className = `card-img ${rarityClasses[card.rarity] || ''}`;
      cardDiv.appendChild(faceImg);

      if (card.newUnlock && !newUnlockShown) {
        const badge = document.createElement('span');
        badge.className = 'new-unlock';
        badge.textContent = 'New!';
        cardDiv.appendChild(badge);

        toast.textContent = `New card unlocked: ${card.cardId}`;
        toast.classList.add('show');
        newUnlockShown = true;
        setTimeout(() => toast.classList.remove('show'), 3000);
      }
    }, 1000 * (index + 1));
  });

  let seconds = data.autoCloseIn || 10;
  countdown.textContent = `Closing in ${seconds}s...`;

  const timer = setInterval(() => {
    seconds--;
    countdown.textContent = `Closing in ${seconds}s...`;
    if (seconds <= 0) {
      clearInterval(timer);
      window.location.href = 'index.html';
    }
  }, 1000);

  closeBtn.onclick = () => window.location.href = 'index.html';
}

window.renderPackReveal = renderPackReveal;

fetch(packPath)
  .then(res => res.json())
  .then(data => renderPackReveal(data))
  .catch(err => {
    console.error("Failed to load pack reveal data:", err);
    document.getElementById('reveal-title').textContent = 'Failed to load card pack.';
  });
